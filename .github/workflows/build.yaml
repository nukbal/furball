name: "build"
on:
  push:
    branches:
      - release

jobs:
  build-app:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Install ffmpeg macos
        if: matrix.platform == 'macos-latest'
        run: |
          curl -o ./ffmpeg.7z https://evermeet.cx/ffmpeg/ffmpeg-6.0.7z
          7z x ffmpeg.7z
          mkdir src-tauri/bin
          mv ffmpeg src-tauri/bin/ffmpeg-x86_64-apple-darwin

      - name: Install ffmpeg windows
        if: matrix.platform == 'windows-latest'
        run: |
          $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
          Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
          Invoke-WebRequest "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z" -OutFile ffmpeg-release-full-shared.7z
          7z x ffmpeg-release-full-shared.7z
          mkdir ffmpeg
          mv ffmpeg-*/* ffmpeg/
          mkdir src-tauri/bin
          mv ffmpeg/bin/ffmpeg.exe src-tauri/bin/ffmpeg-x86_64-pc-windows-msvc.exe

      - name: Add Real-ESRGAN anime models for macos
        if: matrix.platform == 'macos-latest'
        run: |
          curl -OL https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.5.0/realesrgan-ncnn-vulkan-20220424-macos.zip
          7z x realesrgan-ncnn-vulkan-20220424-macos.zip
          mv realesrgan-ncnn-vulkan src-tauri/bin/realesrgan-x86_64-apple-darwin
          mkdir src-tauri/models
          mv models/realesr-animevideov3-x2.bin src-tauri/models/realesr-animevideov3-x2.bin
          mv models/realesr-animevideov3-x2.param src-tauri/models/realesr-animevideov3-x2.param
          mv models/realesr-animevideov3-x4.bin src-tauri/models/realesr-animevideov3-x4.bin
          mv models/realesr-animevideov3-x4.param src-tauri/models/realesr-animevideov3-x4.param

      - name: Add Real-ESRGAN anime models for windows
        if: matrix.platform == 'windows-latest'
        run: |
          $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
          Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
          Invoke-WebRequest "https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.5.0/realesrgan-ncnn-vulkan-20220424-windows.zip" -OutFile realesrgan.zip
          7z x realesrgan.zip
          mv realesrgan-ncnn-vulkan.exe src-tauri/bin/realesrgan-x86_64-pc-windows-msvc.exe
          mv vcomp140.dll src-tauri/bin/vcomp140.dll
          mv vcomp140d.dll src-tauri/bin/vcomp140d.dll
          mkdir src-tauri/models
          mv models/realesr-animevideov3-x2.bin src-tauri/models/realesr-animevideov3-x2.bin
          mv models/realesr-animevideov3-x2.param src-tauri/models/realesr-animevideov3-x2.param
          mv models/realesr-animevideov3-x4.bin src-tauri/models/realesr-animevideov3-x4.bin
          mv models/realesr-animevideov3-x4.param src-tauri/models/realesr-animevideov3-x4.param

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: yarn install
        run: yarn install
      - name: build app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseDraft: true
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."